name: Build and Package CosyVoice CLI

on:
  push:
    branches:
      - main

jobs:
  build-macos:
    name: macOS ARM64 Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          python-version: 3.10
      - name: Create and activate conda env
        run: |
          conda create -n cosyvoice -y python=3.10
          source "$(conda info --base)/etc/profile.d/conda.sh"
          conda activate cosyvoice
      - name: Install dependencies
        run: |
          conda install -y -c conda-forge pynini==2.1.5
          pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host=mirrors.aliyun.com
          pip install pyinstaller
      - name: Package CLI
        run: |
          pyinstaller --onefile --name cosyvoice-cli \
            --hidden-import torch \
            --hidden-import torchaudio \
            --add-data cosyvoice:cosyvoice \
            --add-data third_party/Matcha-TTS:third_party/Matcha-TTS \
            cli.py
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: cosyvoice-cli-macos-arm64
          path: dist/cosyvoice-cli

  build-linux-x64:
    name: Linux x86_64 Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          python-version: 3.10
      - name: Create and activate conda env
        run: |
          conda create -n cosyvoice -y python=3.10
          source "$(conda info --base)/etc/profile.d/conda.sh"
          conda activate cosyvoice
      - name: Install dependencies
        run: |
          conda install -y -c conda-forge pynini==2.1.5
          pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host=mirrors.aliyun.com
          pip install pyinstaller
      - name: Package CLI
        run: |
          pyinstaller --onefile --name cosyvoice-cli \
            --hidden-import torch \
            --hidden-import torchaudio \
            --add-data cosyvoice:cosyvoice \
            --add-data third_party/Matcha-TTS:third_party/Matcha-TTS \
            cli.py
      - name: Upload Linux x86_64 artifact
        uses: actions/upload-artifact@v3
        with:
          name: cosyvoice-cli-linux-x64
          path: dist/cosyvoice-cli

  build-linux-arm64:
    name: Linux ARM64 Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup QEMU for multi-arch
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64
      - name: Package inside ARM64 container
        run: |
          docker run --rm --platform linux/arm64 \
            -v "${{ github.workspace }}:/src" -w /src \
            continuumio/miniconda3 bash -lc "
            set -e
            . /opt/conda/etc/profile.d/conda.sh
            conda create -n cosyvoice -y python=3.10
            conda activate cosyvoice
            conda install -y -c conda-forge pynini==2.1.5
            pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host=mirrors.aliyun.com
            pip install pyinstaller
            pyinstaller --onefile --name cosyvoice-cli \\
              --hidden-import torch \\
              --hidden-import torchaudio \\
              --add-data cosyvoice:cosyvoice \\
              --add-data third_party/Matcha-TTS:third_party/Matcha-TTS \\
              cli.py
          "
      - name: Upload Linux ARM64 artifact
        uses: actions/upload-artifact@v3
        with:
          name: cosyvoice-cli-linux-arm64
          path: dist/cosyvoice-cli

  create-release:
    name: Publish GitHub Release
    needs: [build-macos, build-linux-x64, build-linux-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Download macOS binary
        uses: actions/download-artifact@v3
        with:
          name: cosyvoice-cli-macos-arm64
          path: artifacts/macos
      - name: Download Linux x86_64 binary
        uses: actions/download-artifact@v3
        with:
          name: cosyvoice-cli-linux-x64
          path: artifacts/linux-x64
      - name: Download Linux ARM64 binary
        uses: actions/download-artifact@v3
        with:
          name: cosyvoice-cli-linux-arm64
          path: artifacts/linux-arm64
      - id: create_release
        name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}@build.yml
          release_name: ${{ github.sha }}@build.yml
          draft: false
          prerelease: false
      - name: Upload macOS binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/macos/cosyvoice-cli
          asset_name: cosyvoice-cli-macos-arm64
          asset_content_type: application/octet-stream
      - name: Upload Linux x86_64 binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/linux-x64/cosyvoice-cli
          asset_name: cosyvoice-cli-linux-x64
          asset_content_type: application/octet-stream
      - name: Upload Linux ARM64 binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/linux-arm64/cosyvoice-cli
          asset_name: cosyvoice-cli-linux-arm64
          asset_content_type: application/octet-stream 